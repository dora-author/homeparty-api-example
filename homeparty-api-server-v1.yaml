---
openapi: 3.0.0
servers:
- url: http://193.123.228.68:31231
  description: 홈파티 인증 서버
info:
  version: 1.0.0
  title: 홈파티 API 가이드
  description: |
    <br>
    
    <h3>본 문서에 관하여</h3>
    홈파티 API 가이드는 (주)[누리플렉스](http://www.nuritelecom.com/)에서 제공하는 홈파티 서비스를 적용하여 웹 애플리케이션과 같은 소프트웨어를 개발하기 위한 홈파티 API의 기능과 사용법을 설명한 문서입니다.
    
    <br>

    <h4>개정 이력</h4>
    | Version | Date         | Description     | Author      |
    | :------ | :----------- | :-------------- | :---------- |
    | 1.0.0   | 2022. 7. 25. | Initial release | Eunjung Kim |
    
    <br>
    
    <h4>대상 독자</h4>
    홈파티 API를 사용하는 클라이언트 측 개발자 혹은 사용자 
    
    <br>

    <h3>홈파티 API 소개</h3>
    홈파티 API는 클라이언트 측 개발자가 웹 애플리케이션 및 웹 서비스와 같은 소프트웨어에 토스페이먼츠에서 제공하는 서비스 및 기능를 적용하기 위해 사용하는 인터페이스입니다.
    홈파티 API는 [Representational State Transfer(REST)](https://ko.wikipedia.org/wiki/REST) API 형태로 [HTTP](https://ko.wikipedia.org/wiki/HTTP) 프로토콜 기반의 클라이언트-서버 구조에서 동작하며, 클라이언트와 서버 간의 요청과 응답을 전달합니다.

    *- Note: 클라이언트 측 개발자는 홈파티 API를 통하여 클라이언트 측 요청 메시지(요청)를 서버 측에 전송하고 서버로부터 받는 응답 데이터를 웹 서비스 및 웹 애플리케이션을 구현하는데 활용합니다. <br>
    이 요청 메시지는 서버 측 URL 및 HTTP 메서드, 요청 파라미터 및 본문 데이터를 포함합니다. 반대로 응답 메시지(응답)는 API 요청에 대한 서버의 처리 결과에 해당하는 응답 데이터를 포함합니다.*
    
    <br>

    홈파티 API 가이드에서는 클라이언트 측 개발자가 홈파티 API를 사용하기 위한 방법으로써, 홈파티 API의 기능, API 요청 및 응답에 필요한 데이터와 같은 아래 항목에 대하여 설명합니다. 
    * 홈파티 API의 주요 기능 및 전달 정보
    * Uniform Resource Locator(URL): 홈파티 API 요청 대상으로, 정보(자원)가 위치하는 서버 측 경로
    * HTTP 메서드: 홈파티 API 요청에 대해 서버 측에서 정보(자원)을 처리하는 동작. GET(조회), POST(생성), PUT(수정), PATCH(일부 수정), DELETE(삭제)가 있음.
    * API 요청 시 전송 데이터:
      * 파라미터 및 본문 데이터의 타입
      * 각 구성 파라미터 및 본문 데이터의 속성, 타입, 설명
      * 샘플 요청
    * API 요청 후 서버로부터 받는 응답 데이터:
      * 본문 데이터의 타입
      * 각 구성 본문 데이터의 속성, 타입, 설명
      * 샘플 응답
      * 각 응답 상태 코드에 대한 설명

    본 가이드에서 설명하는 홈파티 API의 종류는 아래와 같습니다.
    * 


    *- Note: 위 정보는 본 가이드의 각 홈파티 API 섹션에서 상세히 다룹니다.*      
    
    <br>

    <h3>홈파티 API 요청하기</h3>
    홈파티 API를 직접 요청하고 서버로부터의 응답을 확인할 수 있습니다.
    [**cURL**](https://curl.se/)과 같은 커맨드 라인 기반 데이터 전송 도구를 이용하여 홈파티 API를 요청하고 가이드에 명시된 예시 응답과 같이 출력되는지 확인할 수 있습니다. 또는 본 가이드에서 제공하는 `Try it out` 기능을 통해 가이드 페이지에서 서버로 해당 API 요청 메시지를 직접 전송하고 서버로부터의 응답을 바로 확인할 수 있습니다.

    <h4>API 요청 및 서버 응답 개선하기</h4>
    **cURL**을 이용하여 API를 요청하고 서버 응답을 확인할 경우 아래의 방법을 통해 보다 정확하고 명확한 결과를 얻을 수 있습니다.
    - 요청 본문 데이터를 큰따옴표 `"`가 아닌 작은따옴표 `'`로 묶습니다. 본문 데이터를 큰따옴표 `"`로 묶는 경우 구분 분석 오류가 발생합니다.
    - 응답 본문 데이터의 가독성을 높이기 위해 요청 명령어 작성 시 요청문 맨 끝에 `| jq .` 명령어를 사용합니다.

      *- Note: `jq` 패키지가 없을 경우 `sudo apt-get install jq` 명령어를 통해 설치합니다.*
    - **cURL** 옵션인 `-v`을 사용하면 요청에 대한 응답 본문 데이터 뿐만 아니라 요청 및 응답의 헤더 데이터도 확인할 수 있습니다. 헤더 데이터에는 HTTP 메서드, 요청 대상(URL), HTTP 버전, HTTP 상태 코드와 같은 요청 및 응답과 관련한 부가 정보가 포함됩니다.

    *- Note: 위 방법은 **Linux** OS 기준입니다.*

    <br>

    <h4>API 요청 및 응답 예시</h4>
    
    **cURL**을 이용한 API 요청은 아래와 같습니다. 
    ```
    curl -v -X 'POST' -H 'Content-Type: application/json' -H 'accept: application/json' 'http://193.123.228.68:31231/api/gnd-hparty-auth/v1.0/token' -d '{
    "tokenType": "auth_token"
    "userId": "hong",
    "role": "string",
    "content": {
     "email": "gildong@nuriflex.co.kr"
     }
    }' | jq .
    ```
    *- Note: 위 요청은 **Linux** OS 기준으로 작성되었습니다. **Linux** OS에는 **cURL**이 기본적으로 설치되어 있어 터미널에서 바로 해당 요청을 보낼 수 있습니다.*
    
    <br>

    **cURL**을 이용한 API 요청에 대한 서버로부터의 응답은 아래와 같습니다.
    ``` curl
    > POST /api/gnd-hparty-auth/v1.0/token HTTP/1.1
    > Host: 193.123.228.68:31231
    > User-Agent: curl/7.58.0
    > accept: application/json
    > Content-Type: application/json
    > Content-Length: 114
    >
    } [114 bytes data]
    * upload completely sent off: 114 out of 114 bytes
    < HTTP/1.1 200
    < Vary: Origin
    < Vary: Access-Control-Request-Method
    < Vary: Access-Control-Request-Headers
    < X-Content-Type-Options: nosniff
    < X-XSS-Protection: 1; mode=block
    < Cache-Control: no-cache, no-store, max-age=0, must-revalidate
    < Pragma: no-cache
    < Expires: 0
    < X-Frame-Options: DENY
    < Content-Type: application/json
    < Transfer-Encoding: chunked
    < Date: Mon, 25 Jul 2022 07:18:20 GMT
    <
    { [445 bytes data]
    100   547    0   433  100   114   7732   2035 --:--:-- --:--:-- --:--:--  9945
    eunjung@DESKTOP-958KKVN:~$
    {
      "code": "AS2000",
      "message": "성공",
      "payload": [
        {
          "tokenType": "auth_token",
          "token": "eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhdXRoIiwicm9sZSI6IiIsImNvbnRlbnQiOiIiLCJ0b2tlblR5cGUiOiJhdXRoX3Rva2VuIiwiaXNzIjoibnVyaWZsZXguY28ua3IiLCJpYXQiOjE2NTg3MzM1MDAsImV4cCI6MTY1ODczNTMwMCwianRpIjoiMzRhNzE2ZDRmODFjNDVmMTg5Zjk1Yzc1ZjUyNWI5ZmEiLCJzdWIiOiJhdXRoIn0.S80DYQn6ng1Dh-GoM5W2UOXHxqvpFjsv07FUraUKEas",
          "exp": "1658735300146"
        }
      ],
      "when": "2022-07-25T16:18:20"
    }
    ```
    <br>

    <h4>HTTP 상태 코드</h4>
    API 요청에 대한 서버로부터의 응답 중 HTTP 상태 코드를 통해 서버의 응답 상태를 확인할 수 있습니다.
    주요 HTTP 상태 코드에 대한 설명은 아래와 같습니다.
    | 상태 코드 | 설명 |
    | :-------- | :----------- |
    | `200` OK | 요청을 성공적으로 처리한 상태입니다. |
    | `400` Bad Request | 잘못된 요청으로 요청을 처리할 수 없는 상태입니다.|
    | `403` Forbidden | 요청하는 사용자의 권한 문제로 요청을 거부한 상태입니다. |
    | `404` Not Found | 요청하는 정보(자원)가 존재하는 않아 서버가 찾을 수 없는 상태입니다. |
    | `500` Server Error | 서버에 오류가 발생하여 서버가 요청을 처리할 수 없는 상태입니다. |
    


tags:
  - name: 인가 API 
    description: |
      인가(Authorization) API는 홈파티 서비스의 다양한 사용자 기능을 적용하기에 앞서 사용자 접근 권한을 얻기 위해 요청하는 API입니다.
      인가 API는 클라이언트 측 요청에 대한 사용자 정보를 서버 측으로 전달하고 서버 측 응답에 대한 생성된 인가 토큰 및 코드을 클라이언트 측에 전달하거나 생성된 토큰 및 코드가 유효한지 검증 결과를 전달합니다. 
      
    description2: |
        


  #- name: API Samples
  #  description: API Samples는 고객이 클라이언트의 결제시스템을 통해 제품을 결제할 때 필요한 요청과 응답을 전달해주는 인터페이스입니다. 

# Paths
paths:
  /api/gnd-hparty-auth/v1.0/token:
    post:
      summary: 인가 토큰 API
      tags:
        - 인가 API
      description:  |
        인가 토큰에 대한 요청과 응답을 전달하는 인터페이스입니다. 요청하는 토큰 타입 및 사용자 정보를 본문 데이터로 전송하여 API를 요청하고 서버로부터 인가 토큰을 응답 데이터로 받을 수 있습니다.
      requestBody:
        description: | 
          인가 토큰 API 요청 시 전송하는 본문 데이터입니다. 
          요청 본문 데이터의 모든 속성들을 필수로 전송해야 합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestTokenInfo' 
      responses:
        '200':
          description: 인가 토큰 API 요청에 대하여 인가 토큰이 정상적으로 생성됨
          content:
            application/json:
              schema:
                #type: array #array 타입이 아니므로 items까지 주석처리
                #items:
                $ref: '#/components/schemas/ResponseMessageAuthToken'
        '400':
          description: 인가 토큰 API 요청에 대하여 전송해야할 필수 데이터가 누락되거나 잘못된 데이터 형식으로 요청을 처리할 수 없어 인가 토큰 생성에 실패함
          #type: array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
#
# Components
components:
  schemas:
    RequestTokenInfo:
      type: object
      description: 인가 토큰 API 요청 시 전송하는 본문 데이터 속성
      required:
        - tokenType
      properties:
        tokenType:
          type: string
          description: 요청 토큰 종류
          example: auth_token
        userId:
          type: string
          description: 사용자 아이디
          example: hong 
        role:
          type: string
          description: 사용자 권한 정보
          example: createAccount
        content:
          type: object
          description: 사용자 기타 정보
          properties:
            email: 
              type: string
              description: 사용자 이메일 주소
              example: gildong@nuriflex.co.kr
    ResponseMessageAuthToken:
      type: object
      description: 인가 토큰 API 요청에 대한 응답 성공 `200`인 경우, 응답 본문 데이터 
      properties:
        code:
          type: string
          description: 서버 응답 코드
          example: AS2000
        message:
          type: string
          description: 응답 메시지
          example: 성공
        payload:
          type: array
          description: 응답 인가 토큰 정보
          items:
            $ref: "#/components/schemas/ResponseAuthToken"
          example:
            tokenType: auth_token
            token: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhdXRoIiwicm9sZSI6IiIsImNvbnRlbnQiOiIiLCJ0b2tlblR5cGUiOiJhdXRoX3Rva2VuIiwiaXNzIjoibnVyaWZsZXguY28ua3IiLCJpYXQiOjE2NTg3NDE2NDIsImV4cCI6MTY1ODc0MzQ0MiwianRpIjoiOGVjYmE1Y2VmZWU3NDUyYWFhZDFiODhlYmQ4YjhiYTkiLCJzdWIiOiJhdXRoIn0.L9NGMPE6gweJ4wr0avCrvhh5tGwY0i8bkNMv45Reako
            exp: "1658743442428"
        when:
          pattern: yyyy-MM-dd'T'HH:mm:ss
          type: string
          description: 응답 시간
          format: date-time
          example: 2020-03-20T12:03:31.991Z
      # example:
      #   code: AS2000
      #   message: 성공
      #   payload:
      #     $ref: "#/components/schemas/ResponseAuthToken/example"
      #   when: 2020-03-20T12:03:31.991Z  
    ResponseAuthToken:
      type: object
      #description: 응답 인가 토큰 정보 
      properties:
        tokenType:
          type: string
          description: 토큰 타입
          example: auth_token
        token:
          type: string
          description: 토큰값
          example: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhdXRoIiwicm9sZSI6IiIsImNvbnRlbnQiOiIiLCJ0b2tlblR5cGUiOiJhdXRoX3Rva2VuIiwiaXNzIjoibnVyaWZsZXguY28ua3IiLCJpYXQiOjE2NTg3NDE2NDIsImV4cCI6MTY1ODc0MzQ0MiwianRpIjoiOGVjYmE1Y2VmZWU3NDUyYWFhZDFiODhlYmQ4YjhiYTkiLCJzdWIiOiJhdXRoIn0.L9NGMPE6gweJ4wr0avCrvhh5tGwY0i8bkNMv45Reako
        exp:
          pattern: milliseconds
          type: string
          description: 토큰 만료 시간
          example: 1658743442428
      # example:
      #   tokenType: auth_token
      #   token: eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhdXRoIiwicm9sZSI6IiIsImNvbnRlbnQiOiIiLCJ0b2tlblR5cGUiOiJhdXRoX3Rva2VuIiwiaXNzIjoibnVyaWZsZXguY28ua3IiLCJpYXQiOjE2NTg3NDE2NDIsImV4cCI6MTY1ODc0MzQ0MiwianRpIjoiOGVjYmE1Y2VmZWU3NDUyYWFhZDFiODhlYmQ4YjhiYTkiLCJzdWIiOiJhdXRoIn0.L9NGMPE6gweJ4wr0avCrvhh5tGwY0i8bkNMv45Reako
      #   exp: 1658743442428 
    Error:
      type: object
      description: 인가 토큰 API 요청에 대한 응답 실패 `400`인 경우, 응답 본문 데이터  
      properties:
        code:
          type: string
          description: 에러 코드
        message:
          type: string
          description: 에러메세지
        detail:
          type: string
          description: 에러메세지 상세
        when:
          pattern: yyyy-MM-dd'T'HH:mm:ss
          type: string
          description: 응답시간
          format: date-time
      example:
        code: AS4000
        message: 필수 파라미터 미입력
        detail: tokenType은 필수 입력입니다.
        when: 2022-07-25T19:09:09

    responses:
    BadRequest:
      description: 필수 정보가 누락된 잘못된 요청
    UnauthorizedError:
      description: 인증 받지 못한 상태이거나 잘못된 인증 요청.
    Forbidden:
      description: 권한 없음
    NotFound:
      description: 찾지 못함
